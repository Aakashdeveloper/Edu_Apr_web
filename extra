Block Level
Inline Element

a@a

///////
Inline
StyleTag
StyleSheet

Inline > StyleTag >StyleSheet

Target

> Id> Unique
> Class> common to multiple tag
> TagName > To target by html TagName

> color name 
>color code 
> rbg color

primary
success
warning
danger
info

BS3
col-lg
col-md
col-sm
col-xs

BS4
col-
col-sm
col-md
col-lg
col-xl


Ecma 5
Ecma 6
> variable
> Operations
> condition
> if else
> ternery Operations
> Date
> switch
> localstorage
> array
> String literals
> loops
> functions 
> Es6
    > lat, const
    > maps,filter
> Clousers
> regex
> Hoisting
> object 
> Transpile
> Es6
    > classes
    > import export
> Prototypes
> DoM
> Geolocation
> Form validation
> Event
> Calc
> currenyConvertor
> promis
> async await
> Progress bar
> Dynamic Dropdown
> Weather application
> ajax
> Baisc Jquery
////////////////////////////////
Plugins



////Transpile/////

package.json

[
    {
        name:"aa",
        class:"bb"
    }
]

/////
navigate to the folder using cmd
type npm init
Answer all questions
type 'yes'

> npm install @babel/core @babel/register @babel/preset-env

<!DOCTYPE html>
<html>
<body>
<form name="myForm">
<input type="text" id="myText2" value="Data Validation" readonly>
<input type="number" id="myNumb1" value="0" onblur="validateForm(this.id)">
<input type="number" id="myNumb2" value="0" onblur="validateForm(this.id)">
<input type="number" id="myNumb3" value="0" readonly>
<input type="number" id="myNumb4" value="0" readonly>

<script type='text/javascript'>

function validateForm(id){
  var z = document.forms["myForm"][id].value;

  if(!/^[0-9]+$/.test(z)){
    
document.forms["myForm"][id].value="0";
document.forms["myForm"]["myText2"].value=id+" - Invalid Data Entered";
alert("Please only enter numeric characters Only! (Allowed input:0-9)")
  }
else 
document.forms["myForm"]["myText2"].value=id+" - Valid Data";

}
</script>

</body>
</html>